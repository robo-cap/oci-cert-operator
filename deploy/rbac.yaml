apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oci-cert-operator-cluster-role
rules:
  # # Framework: knowing which other operators are running (i.e. peering).
  # - apiGroups: [kopf.dev]
  #   resources: [clusterkopfpeerings]
  #   verbs: [list, watch, patch, get]

  # # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  # - apiGroups: [apiextensions.k8s.io]
  #   resources: [customresourcedefinitions]
  #   verbs: [list, watch]
  # - apiGroups: [""]
  #   resources: [namespaces]
  #   verbs: [list, watch]

  # # Framework: admission webhook configuration management.
  # - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
  #   resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
  #   verbs: [create, patch]

  # for controlling secrets  
  - apiGroups: [""]
    resources: [secrets]
    verbs: [list,watch,patch,get]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oci-cert-operator
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oci-cert-operator-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oci-cert-operator-cluster-role
subjects:
  - kind: ServiceAccount
    name: oci-cert-operator
    namespace: default